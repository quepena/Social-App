{"version":3,"sources":["components/Header.js","actions/userActions.js","constants/userConstants.js","components/ChatMessage.js","components/Conversation.js","screens/MessageScreen.js","components/SearchBox.js","screens/UsersScreen.js","components/FormContainer.js","components/Loader.js","components/Message.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/UserScreen.js","screens/UserProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","index.js"],"names":["Header","dispatch","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","variant","expand","Container","Row","style","display","alignItems","Col","sm","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","knownAs","charAt","toUpperCase","slice","Item","Divider","onClick","localStorage","removeItem","type","ChatMessage","chatMessage","own","conversation","useState","friend","setFriend","useEffect","participants","find","m","_id","a","axios","res","data","fetchUsers","Card","marginBottom","key","Body","username","Title","contents","Footer","format","date","Conversation","margin","MessageScreen","history","conversations","setConversations","currentConversation","setCurrentConversation","messages","setMessages","newMessage","setNewMessage","arrivedMessage","setArrivedMessage","socket","useRef","scrollRef","config","headers","Authorization","token","current","io","on","sender","Date","now","push","includes","prev","emit","users","console","log","get","fetchConversations","fetchMessages","scrollIntoView","behavior","submitHandler","e","preventDefault","message","conversationId","reciever","post","md","border","borderRadius","map","c","ref","justifyContent","width","Form","Control","onChange","target","value","as","placeholder","Button","icon","faPaperPlane","fontSize","SearchBox","keyword","setKeyword","onSubmit","trim","name","faSearch","UsersScreen","match","setUsers","params","render","juctifyContent","flexWrap","user","faUser","Text","gender","city","country","introduction","FormContainer","children","xs","Loader","Spinner","animation","role","height","Message","Alert","defaultProps","LoginScreen","location","setUsername","password","setPassword","loading","error","redirect","search","split","payload","setItem","JSON","stringify","response","login","marginTop","Group","controlId","Label","RegisterScreen","confirmPassword","setConfirmPassword","setMessage","setKnownAs","setGender","countries","setCountry","cities","setCity","setIntroduction","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","userRegister","fetchCountries","length","register","selected","disabled","hidden","fetchCities","countryName","cityName","UserScreen","userDetails","success","userUpdateProfile","successDelete","userDeleteProfile","getState","put","updateUserProfile","window","confirm","delete","deleteUserAccount","UserProfileScreen","setUser","posts","setPosts","setTitle","setContents","fetchUser","fetchPosts","flag","conv","postHandler","userId","reload","padding","textAlign","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3f3ebc11.chunk.js","sourcesContent":["import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Container, Nav, NavDropdown, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../actions/userActions';\n\nconst Header = () => {\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin);\n\n    const { userInfo } = userLogin;\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n                <Container>\n                    <Row style={{display: 'flex', alignItems: 'center'}}>\n                        <Col sm={5}>\n                            <LinkContainer to=\"/\"><Navbar.Brand>Social-App</Navbar.Brand></LinkContainer>\n                        </Col>\n                        <Col sm={5}>\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\n                                {userInfo ? (\n                                    <Nav className=\"me-auto\">\n                                        <LinkContainer to=\"/\">\n                                            <Nav.Link>Friends</Nav.Link>\n                                        </LinkContainer>\n                                        <LinkContainer to=\"/messages\">\n                                            <Nav.Link>Messages</Nav.Link>\n                                        </LinkContainer>\n                                    </Nav>\n                                ) : (<div>\n                                </div>)}\n                            </Navbar.Collapse>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={2}>\n                            <Nav>\n                                {userInfo ? (\n                                    <NavDropdown title={\"Hello, \" + userInfo.knownAs.charAt(0).toUpperCase() + userInfo.knownAs.slice(1)} id='name'>\n                                        <LinkContainer to=\"/users/profile\"><NavDropdown.Item>Profile</NavDropdown.Item></LinkContainer>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to=\"/profile/edit\"><NavDropdown.Item>Edit profile</NavDropdown.Item></LinkContainer>\n                                        <NavDropdown.Divider />\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                    </NavDropdown>\n                                ) : (<LinkContainer to=\"/login\">\n                                    <Nav.Link>Login</Nav.Link>\n                                </LinkContainer>)\n                                }\n                            </Nav>\n                        </Col>\n                    </Row>\n                </Container>\n            </Navbar>\n        </header >\n    )\n}\n\nexport default Header\n","import axios from \"axios\"\nimport {\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DELETE_PROFILE_REQUEST,\n    USER_DELETE_PROFILE_SUCCESS,\n    USER_DELETE_PROFILE_FAIL,\n} from \"../constants/userConstants\"\n\nexport const login = (username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', { username, password }, config);\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    dispatch({ type: USER_LOGOUT });\n}\n\nexport const register = (username, password, knownAs, gender, country, city, introduction) => async (dispatch) => {\n\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users', { username, password, knownAs, gender, country, city, introduction }, config);\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/users/${id}`, config);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/users/profile`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const deleteUserAccount = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_PROFILE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        localStorage.removeItem('userInfo');\n\n        dispatch({\n            type: USER_LOGOUT,\n        })\n\n        await axios.delete(`/api/users/users/${user}`, config);\n\n        dispatch({\n            type: USER_DELETE_PROFILE_SUCCESS,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\n\nexport const USER_DELETE_PROFILE_REQUEST = 'USER_DELETE_PROFILE_REQUEST'\nexport const USER_DELETE_PROFILE_SUCCESS = 'USER_DELETE_PROFILE_SUCCESS'\nexport const USER_DELETE_PROFILE_FAIL = 'USER_DELETE_PROFILE_FAIL'","import React, { useEffect, useState } from 'react'\nimport { format } from 'timeago.js'\nimport { Card } from 'react-bootstrap'\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\n\nconst ChatMessage = ({ chatMessage, own, conversation }) => {\n    const [friend, setFriend] = useState([]);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        const friend = conversation.participants.find((m) => m !== userInfo._id)\n\n        const fetchUsers = async (friend) => {\n            const res = await axios(`/api/users/users/${friend}`);\n            setFriend(res.data)\n        }\n        fetchUsers(friend)\n\n    }, [userInfo, conversation])\n\n    return (\n        <Card className={own ? \"chatMessageOwn\" : \"chatMessage\"} style={{ marginBottom: \"2vh\" }} key={chatMessage._id}>\n            <Card.Body>\n                { own ? <Card.Header>You</Card.Header> : <Card.Header>{friend.username}</Card.Header>}\n                <Card.Title>{chatMessage.contents}</Card.Title>\n                <Card.Footer>{format(chatMessage.date)}</Card.Footer>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default ChatMessage","import React, { useEffect, useState } from 'react'\nimport { Card } from 'react-bootstrap'\nimport {  useSelector } from \"react-redux\";\nimport axios from 'axios';\n\nconst Conversation = ({ conversation }) => {\n    const [friend, setFriend] = useState([]);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        const friend = conversation.participants.find((m) => m !== userInfo._id)\n\n        const fetchUsers = async (friend) => {\n            const res = await axios(`/api/users/users/${friend}`);\n            setFriend(res.data)\n        }\n        fetchUsers(friend)\n\n    }, [userInfo, conversation])\n\n    return (\n        <Card style={{margin: \"2% 0 2% 0\"}}>\n            <Card.Body>\n                <Card.Title>{friend.username}</Card.Title>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Conversation\n","import React, { useEffect, useState, useRef } from 'react'\nimport { Row, Col, Card, Container, Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport ChatMessage from '../components/ChatMessage';\nimport { io } from 'socket.io-client'\nimport Conversation from '../components/Conversation';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n\nconst MessageScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const [conversations, setConversations] = useState([]);\n\n    const [currentConversation, setCurrentConversation] = useState(null);\n\n    const [messages, setMessages] = useState([]);\n\n    const [newMessage, setNewMessage] = useState('');\n    const [arrivedMessage, setArrivedMessage] = useState(null);\n\n    const socket = useRef();\n\n    const scrollRef = useRef();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const config = {\n        headers: {\n            Authorization: `Bearer ${userInfo.token}`\n        }\n    }\n\n    useEffect(() => {\n        if (userInfo) {\n            socket.current = io(\"https://social-media-application-mern.herokuapp.com/\");\n            socket.current.on(\"getMessage\", data => {\n                setArrivedMessage({\n                    sender: data.sender,\n                    contents: data.contents,\n                    date: Date.now(),\n                })\n            })\n        } else {\n            history.push('/login');\n        }\n    }, [userInfo, history])\n\n    useEffect(() => {\n        arrivedMessage && currentConversation?.participants.includes(arrivedMessage.sender) &&\n            setMessages(prev => [...prev, arrivedMessage])\n\n    }, [arrivedMessage, currentConversation])\n\n    useEffect(() => {\n        if (userInfo) {\n            socket.current.emit(\"addUser\", userInfo._id);\n            socket.current.on(\"getUsers\", users => {\n                console.log(users);\n            });\n        } else {\n            history.push('/login');\n        }\n    }, [userInfo, history])\n\n    useEffect(() => {\n        if (userInfo) {\n            const fetchConversations = async (id) => {\n                try {\n                    const res = await axios.get(`/api/conversations/${id}`, config)\n                    console.log(res.data);\n                    setConversations(res.data)\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n            fetchConversations(userInfo._id);\n        } else {\n            history.push('/login');\n        }\n    }, [userInfo, history])\n\n    useEffect(() => {\n        if (userInfo) {\n            const fetchMessages = async (id) => {\n                const { data } = await axios.get(`/api/messages/${id}`, config)\n                setMessages(data)\n            }\n            fetchMessages(currentConversation?._id);\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, history, userInfo, currentConversation])\n\n    useEffect(() => {\n        if (userInfo) {\n            if (scrollRef.current) {\n                scrollRef.current.scrollIntoView({ behavior: \"auto\" })\n            }\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, history, userInfo, messages])\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n\n        const message = {\n            sender: userInfo._id,\n            contents: newMessage,\n            conversationId: currentConversation._id,\n        }\n        console.log(message);\n\n        const reciever = currentConversation.participants.find(m => m !== userInfo._id)\n\n        socket.current.emit(\"sendMessage\", {\n            sender: userInfo._id,\n            reciever,\n            contents: newMessage\n        })\n\n        const res = await axios.post('/api/messages', message, config)\n        setMessages([...messages, res.data])\n    }\n\n    return (\n        <>\n            {userInfo ? (\n                <Container>\n                    <Card>\n                        <Card.Body>\n                            <Row>\n                                <Col md={4} style={{ border: \"solid #158cba 3px\", borderRadius: \"2%\", margin: \"1%\" }}>\n                                    {\n                                        conversations.map((c) => (\n                                            <div onClick={() => {\n                                                setCurrentConversation(c);\n                                            }}><Conversation conversation={c} />\n                                            </div>\n                                        ))\n                                    }\n\n                                </Col>\n                                <Col>\n                                    {currentConversation ? (\n                                        <Col>\n                                            <Col className=\"chatBox\">\n\n                                                <Col md={8} className=\"chatBoxWrapper\">\n                                                    {\n                                                        messages.map((message) => (\n                                                            <div ref={scrollRef}>\n                                                                <ChatMessage chatMessage={message} own={message.sender === userInfo._id} conversation={currentConversation} />\n                                                            </div>\n                                                        ))\n                                                    }\n\n                                                </Col>\n\n                                            </Col>\n                                            <Col style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\" }}>\n                                                <Form.Control onChange={(e) => setNewMessage(e.target.value)} value={newMessage} className=\"mx-2\" as=\"textarea\" placeholder=\"Write a message here\" />\n                                                <Button onClick={submitHandler} type=\"submit\" variant=\"primary\"><FontAwesomeIcon className=\"mx-2\" icon={faPaperPlane}></FontAwesomeIcon></Button>\n                                            </Col>\n                                        </Col>\n                                    ) : (\n                                        <p style={{ fontSize: \"25px\" }}>Choose a conversation to chat!</p>\n                                    )}\n                                </Col>\n\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Container>\n            ) : (\n                <div></div>\n            )}\n        </>\n    )\n}\n\nexport default MessageScreen\n","import React from 'react'\nimport { useState } from \"react\"\nimport { Form, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst SearchBox = ({ history }) => {\n    const [keyword, setKeyword] = useState('');\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(keyword.trim()) {\n            history.push(`/search/${keyword}`);\n        } else {\n            history.push('/')\n        }\n    }\n\n    return (\n        <Form onSubmit={submitHandler} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} className=\"my-5\">\n            <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)} placeholder=\"Find a user by name, username, country or a city\" />\n            <Button type='submit' variant=\"primary\"><FontAwesomeIcon className=\"mx-2\" icon={faSearch}></FontAwesomeIcon></Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Card, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useSelector } from \"react-redux\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from '../components/SearchBox';\nimport { Route } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst UsersScreen = ({ match, history }) => {\n    const [users, setUsers] = useState([]);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const keyword = match.params.keyword\n\n    const [age, setAge] = useState([]);\n\n    useEffect(() => {\n        if (userInfo) {\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const fetchUsers = async (keyword = '') => {\n                const { data } = await axios.get(`/api/users/users?keyword=${keyword}`, config);\n                setUsers(data);\n            }\n\n            fetchUsers(keyword);\n        } else {\n            history.push('/login');\n        }\n    }, [keyword, history, userInfo])\n\n    return (\n        <Container>\n            <Row>\n                <Route render={({ history }) => <SearchBox history={history} />} />\n            </Row>\n            <Row style={{ display: 'flex', juctifyContent: 'center', alignItems: 'center', flexWrap: 'wrap' }}>\n                {\n                    users.map((user) => (\n                        userInfo && user._id === userInfo._id ? ((<div key={user._id}>\n                        </div>)) :\n                            (\n                                <LinkContainer to={`users/${user._id}`} key={user._id} style={{ width: '30vh', margin: '2vh' }}>\n                                    <Card>\n                                        <Card.Body>\n                                            <Card.Title><FontAwesomeIcon className=\"mx-2\" icon={faUser}></FontAwesomeIcon><strong>{user.username}</strong></Card.Title>\n                                            <Card.Text>{user.knownAs.charAt(0).toUpperCase() + user.knownAs.slice(1) + \", \"+ user.gender}</Card.Text>\n                                            <Card.Text>{user.city+\", \"+user.country}</Card.Text>\n                                            <Card.Text>{user.introduction}</Card.Text>\n                                            <Button>Go to profile</Button>\n                                        </Card.Body>\n                                    </Card>\n                                </LinkContainer>\n                            )\n                    ))\n                }\n            </Row>\n        </Container >\n    )\n}\n\nexport default UsersScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner animation='border' role='status' style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}>\n            <span className='sr-only'></span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from \"react-bootstrap\"\n\nconst Message = ({variant, children}) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from '../actions/userActions';\nimport FormContainer from \"../components/FormContainer\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst LoginScreen = ({ location, history }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n\n    const { userInfo, loading, error } = userLogin;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(username, password));\n    }\n\n    return (\n        <FormContainer>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader/>}\n            <Form onSubmit={submitHandler} style={{ marginTop: \"3vh\", marginBottom: \"3vh\" }}>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"\" placeholder=\"Enter your username\"\n                        value={username} onChange={(e) => setUsername(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter your password\"\n                        value={password} onChange={(e) => setPassword(e.target.value)} style={{marginBottom: \"3vh\"}}></Form.Control>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">Sign in</Button>\n                <Button variant=\"info\" type=\"submit\" onClick={(e) => {setUsername(\"demo\"); setPassword(\"demouser\")}}>Sign in as Demo user</Button>\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    Don't have an account yet?\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}> Register</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from '../actions/userActions';\nimport FormContainer from \"../components/FormContainer\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport axios from \"axios\";\n\nconst RegisterScreen = ({ location, history }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n    const [knownAs, setKnownAs] = useState('');\n    const [gender, setGender] = useState('');\n    const [countries, setCountry] = useState([]);\n    const [cities, setCity] = useState([]);\n    const [introduction, setIntroduction] = useState('');\n\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [selectedCity, setSelectedCity] = useState('');\n    const [age, setAge] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n\n    const { userInfo, loading, error } = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n        const fetchCountries = async () => {\n            const { data } = await axios.get('/api/countries');\n            setCountry(data)\n        };\n        fetchCountries();\n\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords don\\'t match');\n        }\n        else if (username.length < 2 || username.length > 25) {\n            setMessage('Your username must be from 2 to 25 characters long');\n        }\n        else if (!gender) {\n            setMessage('Select your gender please!');\n        }\n        else if (!selectedCountry) {\n            setMessage('Select your country please!');\n        }\n        else if (!selectedCity) {\n            setMessage('Select your city please!');\n        }\n        else if (!introduction) {\n            setMessage('Enter your introduction please!');\n        } else {\n            dispatch(register(username, password, knownAs, gender, selectedCountry, selectedCity, introduction));\n        }\n    }\n\n    return (\n        <FormContainer>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"\" placeholder=\"Enter your username\"\n                        value={username} onChange={(e) => setUsername(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter your password\"\n                        value={password} onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm your password\"\n                        value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"knownAs\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"\" placeholder=\"Enter your name\"\n                        value={knownAs} onChange={(e) => setKnownAs(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"gender\">\n                    <Form.Label>Gender</Form.Label>\n                    <Form.Control as=\"select\" type=\"\" value={gender} onChange={(e) => setGender(e.target.value)}>\n                        <option value=\"\" selected disabled hidden>Select your gender</option>\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>\n                        <option value=\"Uknown\">Unknown</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"country\">\n                    <Form.Label>Country you are in</Form.Label>\n                    <Form.Control as=\"select\" type=\"\" value={selectedCountry}\n                        onChange={(e) => {\n                            setSelectedCountry(e.target.value);\n                            const fetchCities = async (selectedCountry) => {\n                                const { data } = await axios.get(`/api/cities/${selectedCountry}`);\n                                setCity(data)\n                            };\n                            fetchCities(e.target.value);\n                        }}>\n                        {\n                            countries.map((country, _id) => (\n                                <option value={country.countryName} key={country._id}>\n                                    {country.countryName}\n                                </option>\n                            ))\n                        }\n                        <option value=\"\" selected disabled hidden>Select a country</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"city\">\n                    <Form.Label>City you are in</Form.Label>\n                    <Form.Control as=\"select\" type=\"\" value={selectedCity}\n                        onChange={(e) => setSelectedCity(e.target.value)}>\n                        {\n                            cities.map((city, _id) => (\n                                <option value={city.cityName} key={city._id}>\n                                    {city.cityName}\n                                </option>\n                            ))\n                        }\n                        <option value=\"\" selected disabled hidden>Select a city</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"introduction\">\n                    <Form.Label>Introduction</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        style={{ height: '100px' }}\n                        value={introduction} onChange={(e) => setIntroduction(e.target.value)}\n                    />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">Next</Button>\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    Already have an account?\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen","import React from 'react'\nimport { getUserDetails, updateUserProfile, deleteUserAccount } from '../actions/userActions'\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst UserScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    \n    const [message, setMessage] = useState(null);\n\n    const userDetails = useSelector(state => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n    const { success } = userUpdateProfile;\n\n    const userDeleteProfile = useSelector(state => state.userDeleteProfile);\n    const { success: successDelete } = userDeleteProfile;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user.username) {\n                dispatch(getUserDetails('profile'))\n            } else {\n                setUsername(user.username)\n            }\n        }\n    }, [dispatch, history, userInfo, user, successDelete])\n\n    const deleteHandler = (e, id) => {\n        if (window.confirm('Are you sure you want to delete your account?')) {\n            dispatch(deleteUserAccount(userInfo._id));\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords don\\'t match');\n        } else {\n            dispatch(updateUserProfile({ id: user._id, username, password }));\n        }\n    }\n\n    return (\n        <FormContainer>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Profile successfully updated!</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler} style={{ marginTop: \"3vh\" }}>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"\" placeholder=\"Enter your username\"\n                        value={username} onChange={(e) => setUsername(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter your password\"\n                        value={password} onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm your password\"\n                        value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Col style={{ marginTop: \"3vh\", display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\", flexWrap: \"norap\" }}>\n                    <Button variant=\"primary\" type=\"submit\">Update profile</Button>\n                    <Button onClick={deleteHandler} variant=\"danger\" type=\"submit\">Delete account</Button>\n                </Col>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default UserScreen\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Card, Button, Form } from 'react-bootstrap';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n\nconst UserProfileScreen = ({ match, history }) => {\n    const [user, setUser] = useState({});\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const [conversations, setConversations] = useState([]);\n\n    const [age, setAge] = useState([]);\n\n    const [posts, setPosts] = useState([]);\n\n    const [title, setTitle] = useState('');\n\n    const [contents, setContents] = useState('');\n\n    useEffect(() => {\n        if (userInfo) {\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const fetchConversations = async (id) => {\n                const { data } = await axios.get(`/api/conversations/${id}`, config)\n                setConversations(data)\n            }\n            fetchConversations(userInfo._id);\n\n        } else {\n            history.push('/login');\n        }\n\n    }, [history, userInfo])\n\n    useEffect(() => {\n        if (userInfo) {\n            if (match.params.id !== 'profile') {\n                const fetchUser = async () => {\n                    const res = await axios.get(`/api/users/users/${match.params.id}`);\n                    setUser(res.data);\n                }\n                fetchUser();\n                if (user) {\n                    const fetchPosts = async () => {\n                        const res = await axios.get(\"/api/blogs/\" + match.params.id)\n                        setPosts(res.data)\n                    }\n                    fetchPosts();\n                }\n            } else {\n                const fetchUser = async () => {\n                    const res = await axios.get(`/api/users/users/${userInfo._id}`);\n                    setUser(res.data);\n                }\n                fetchUser();\n                const fetchPosts = async () => {\n                    const res = await axios.get(\"/api/blogs/\" + userInfo._id)\n                    setPosts(res.data)\n                }\n                fetchPosts();\n            }\n        } else {\n            history.push('/login');\n        }\n    }, [history, userInfo])\n\n    const config = {\n        headers: {\n            Authorization: `Bearer ${userInfo.token}`\n        }\n    }\n\n    const submitHandler = async (e) => {\n        if (userInfo) {\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            let flag = true\n            if (conversations.length !== 0) {\n                conversations.map(conv => {\n                    console.log(conversations);\n                    console.log(conv);\n                    const friend = conv.participants.find((m) => m !== userInfo._id)\n                    console.log(friend);\n                    console.log(match.params.id);\n                    if (match.params.id === friend) {\n                        flag = false\n                    }\n                })\n            } else {\n                flag = true\n            }\n            console.log(flag);\n\n            if (flag === true) {\n                const conversation = {\n                    sender: userInfo._id,\n                    reciever: user._id\n                }\n                const res = await axios.post('/api/conversations', conversation, config)\n                setConversations([...conversations, res.data])\n            }\n        } else {\n            history.push('/login');\n        }\n    }\n\n    const postHandler = async (e) => {\n        e.preventDefault();\n        const post = {\n            title: title,\n            contents: contents,\n            userId: userInfo._id,\n        }\n\n        await axios.post(`/api/blogs`, post, config)\n        setPosts([...posts])\n        window.location.reload()\n    }\n\n    return (\n        <Container style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Row style={{ marginTop: \"2vh\", width: \"70vh\" }}>\n                {\n                    userInfo && userInfo._id !== user._id ?\n                        (\n                            <Row>\n                                <Card style={{ display: 'flex', juctifyContent: 'left', alignItems: 'center', padding: \"10vh\" }}>\n                                    <Card.Title><FontAwesomeIcon className=\"mx-2\" icon={faUser}></FontAwesomeIcon><strong>{user.username}</strong></Card.Title>\n                                    <Card.Text>{user.knownAs + \", \" + user.gender}</Card.Text>\n                                    <Card.Text>{user.city + \", \" + user.country}</Card.Text>\n                                    <Card.Text>{user.introduction}</Card.Text>\n                                    <LinkContainer to=\"/messages\" style={{ width: '80%', marginTop: \"2vh\" }}><Button onClick={submitHandler} type=\"submit\" variant=\"primary\"><FontAwesomeIcon className=\"mx-2\" icon={faPaperPlane}></FontAwesomeIcon>Send a message</Button></LinkContainer>\n                                </Card>\n                            </Row>\n                        ) :\n                        (\n                            <Row>\n                                <Card style={{ display: 'flex', juctifyContent: 'left', alignItems: 'center', padding: \"10vh\" }}>\n                                    <Card.Title><FontAwesomeIcon className=\"mx-2\" icon={faUser}></FontAwesomeIcon><strong>{userInfo.username}</strong></Card.Title>\n                                    <Card.Text>{userInfo.knownAs + \", \" + userInfo.gender}</Card.Text>\n                                    <Card.Text>{userInfo.city + \", \" + userInfo.country}</Card.Text>\n                                    <Card.Text>{userInfo.introduction}</Card.Text>\n                                </Card>\n                                <Row style={{ padding: \"5vh\" }}>\n                                    <Form onSubmit={postHandler}>\n                                        <Form.Control type=\"\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)}></Form.Control>\n                                        <Form.Control onChange={(e) => setContents(e.target.value)} value={contents} as=\"textarea\" style={{ height: '100px' }} placeholder=\"Write a new post\" />\n                                        <Button type=\"submit\" className=\"my-4\" variant=\"primary\">Publish</Button>\n                                    </Form>\n                                </Row>\n                            </Row>\n                        )\n                }\n                <h2 style={{ textAlign: \"center\", marginTop: \"3vh\" }}>{user.username}'s posts:</h2>\n                <div style={{ display: 'flex', juctifyContent: 'center', alignItems: 'center', flexWrap: \"wrap\", padding: \"10vh\", marginTop: \"2vh\" }}>\n                    {\n                        posts.map((post) => (\n                            <Card key={post._id} style={{ width: \"100vh\", marginBottom: \"2vh\" }}>\n                                <Card.Body>\n                                    <Card.Title><strong>{post.title}</strong></Card.Title>\n                                    <Card.Text>{post.contents}</Card.Text>\n                                </Card.Body>\n                            </Card>\n                        ))\n                    }\n                </div>\n            </Row>\n        </Container >\n    )\n}\n\nexport default UserProfileScreen\n","import React from 'react'\nimport './App.css';\nimport Header from './components/Header';\nimport './bootstrap.min (3).css';\nimport MessageScreen from './screens/MessageScreen';\nimport UsersScreen from './screens/UsersScreen';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport UserScreen from './screens/UserScreen';\nimport UserProfileScreen from './screens/UserProfileScreen';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Route path='/messages' component={MessageScreen} exact />\n      <Route path='/' component={UsersScreen} exact />\n      <Route path=\"/login\" component={LoginScreen} exact ></Route>\n      <Route path=\"/register\" component={RegisterScreen} exact ></Route>\n      <Route path=\"/profile\" component={UserProfileScreen} exact></Route>\n      <Route path=\"/profile/edit\" component={UserScreen} exact></Route>\n      <Route path=\"/users/:id\" component={UserProfileScreen}/>\n      <Route path=\"/search/:keyword\" component={UsersScreen}/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userDeleteProfileReducer } from './reducers/userReducers' \n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userDeleteProfile: userDeleteProfileReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst initialState = {\n    userLogin: { userInfo: userInfoFromStorage }\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import { \n    USER_LOGIN_FAIL, \n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS, \n    USER_LOGOUT, \n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS, \n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DELETE_PROFILE_REQUEST,\n    USER_DELETE_PROFILE_SUCCESS,\n    USER_DELETE_PROFILE_FAIL,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return {}\n        default:\n            return state;\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const userUpdateProfileReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const userDeleteProfileReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_DELETE_PROFILE_REQUEST:\n            return { loading: true }\n        case USER_DELETE_PROFILE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_DELETE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}